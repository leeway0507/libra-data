// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: test.sql

package sqlc

import (
	"context"
)

const deleteAllBooksRowForTest = `-- name: DeleteAllBooksRowForTest :one
DELETE FROM Books RETURNING ID
`

func (q *Queries) DeleteAllBooksRowForTest(ctx context.Context) (int32, error) {
	row := q.db.QueryRow(ctx, deleteAllBooksRowForTest)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteAllLibariesForTest = `-- name: DeleteAllLibariesForTest :one
DELETE FROM Libraries RETURNING ID
`

func (q *Queries) DeleteAllLibariesForTest(ctx context.Context) (int32, error) {
	row := q.db.QueryRow(ctx, deleteAllLibariesForTest)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteAllLibsBooksForTest = `-- name: DeleteAllLibsBooksForTest :one
DELETE FROM libsbooks RETURNING ID
`

func (q *Queries) DeleteAllLibsBooksForTest(ctx context.Context) (int32, error) {
	row := q.db.QueryRow(ctx, deleteAllLibsBooksForTest)
	var id int32
	err := row.Scan(&id)
	return id, err
}
